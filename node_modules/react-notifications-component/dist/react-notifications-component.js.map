{"version":3,"sources":["webpack://ReactNotifications/webpack/bootstrap","webpack://ReactNotifications/external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}","webpack://ReactNotifications/./node_modules/prop-types/index.js","webpack://ReactNotifications/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://ReactNotifications/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://ReactNotifications/./src/constants.js","webpack://ReactNotifications/./src/utils.js","webpack://ReactNotifications/./src/validators.js","webpack://ReactNotifications/./src/helpers.js","webpack://ReactNotifications/./src/react-notification.js","webpack://ReactNotifications/./src/react-notification-component.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","ReactPropTypesSecret","emptyFunction","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","ReactPropTypes","array","isRequired","bool","func","number","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","NOTIFICATION_BASE_CLASS","CONTAINER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TOP_LEFT","TOP_RIGHT","TOP_CENTER","INSERTION","TOP","BOTTOM","NOTIFICATION_TYPE","SUCCESS","DANGER","INFO","DEFAULT","WARNING","NOTIFICATION_STAGE","REMOVAL","TIMEOUT","CLICK","TOUCH","MANUAL","ERROR","DISMISS_ICON_CLASS","DISMISS_ICON_CONTENT","DISMISS_ICON_STRING","DISMISS_ICON_INVALID","ANIMATION_IN","ANIMATION_OUT","DISMISS_REQUIRED","DISMISS_NUMBER","DISMISS_POSITIVE","TITLE_STRING","MESSAGE_REQUIRED","MESSAGE_STRING","TYPE_REQUIRED","TYPE_STRING","TYPE_NOT_EXISTENT","CONTAINER_REQUIRED","CONTAINER_STRING","DISMISSABLE_CLICK_BOOL","DISMISSABLE_TOUCH_BOOL","WIDTH_NUMBER","INSERT_STRING","TRANSITION_DURATION_NUMBER","TRANSITION_CUBICBEZIER_NUMBER","TRANSITION_DELAY_NUMBER","TYPE_NOT_FOUND","cssWidth","width","concat","undefined","isNullOrUndefined","prop","isString","isNumber","isBoolean","isArray","constructor","Array","validateTransition","transition","defaults","duration","cubicBezier","delay","transitionOptions","isBottomContainer","container","isTopContainer","getHtmlClassesForType","notification","type","userDefinedTypes","content","toLowerCase","htmlClassesForExistingType","foundType","find","q","htmlClasses","getCubicBezierTransition","arguments","length","slidingExitTransition","slidingExit","getInitialSlidingState","_ref","isFirstNotification","hasSliding","insert","state","animatedElementClasses","rootElementStyle","height","marginBottom","overflow","push","animationIn","forEach","item","getChildStyleForTouchTransitionExit","startX","currentX","swipe","fade","window","innerWidth","touchSwipe","touchSlidingExit","touchFade","opacity","position","left","handleStageTransition","animationOut","TOUCH_SLIDING_ANIMATION_EXIT","SLIDING_ANIMATION_EXIT","stateAnimatedElementClasses","stateRootStyle","stage","childElementStyle","resized","getRootHeightStyle","scrollHeight","getNotificationOptions","options","dismissIcon","slidingEnter","touchSlidingBack","dismissable","dismiss","id","Math","random","toString","substr","title","validateTitle","message","validateMessage","validateType","definedTypes","validateUserDefinedTypes","validateContainer","validateInsert","option","click","touch","validateDismissable","iconClassName","className","iconContent","external_commonjs_react_commonjs2_react_amd_react_root_React_default","a","isValidElement","validateDismissIconOption","validateAnimationIn","validateAnimationOut","validateWidth","validateTimeoutDismissOption","react_notification_ReactNotification","ReactNotification","_this","_classCallCheck","this","_getPrototypeOf","endOfSmartSliding","onTransitionEnd","_assertThisInitialized","onNotificationClick","setDismissTimeout","onSmartSlidingEnd","onTouchSmartSlidingEnd","onTouchStart","onTouchMove","onTouchEnd","rootDOM","createRef","Component","smartSliding","setRemovalTimeout","timeoutId","clearTimeout","_this2","setTimeout","_this2$props","toggleTimeoutRemoval","setState","current","requestAnimationFrame","e","stopPropagation","target","isSameNode","toggleRemoval","_this3","onClickHandler","touches","pageX","diffX","swipeLength","_this$props","toggleTouchEnd","distance","abs","onAnimationEnd","touchHasEnded","join","createElement","onTouchCancel","onClick","ref","style","notificationTitle","icon","htmlCloseIconContent","react_notification_component_ReactNotificationComponent","ReactNotificationComponent","react_notification_component_classCallCheck","react_notification_component_getPrototypeOf","isMobile","breakpoint","notifications","types","addNotification","react_notification_component_assertThisInitialized","handleResize","renderReactNotifications","addEventListener","mounted","map","removedBy","prevState","_toConsumableArray","API","_this4","_this5","filter","onNotificationRemoval","_this6","bottom","top","mobileNotifications","topLeft","topRight","topCenter","bottomLeft","bottomRight","bottomCenter","notificationsPerContainer","propTypes","prop_types_default","defaultProps","__webpack_exports__"],"mappings":"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","file":"react-notifications-component.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = require(\"react\");","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","export const NOTIFICATION_BASE_CLASS = \"notification-item\";\n\nexport const CONTAINER = {\n  BOTTOM_LEFT: \"bottom-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  BOTTOM_CENTER: \"bottom-center\",\n  TOP_LEFT: \"top-left\",\n  TOP_RIGHT: \"top-right\",\n  TOP_CENTER: \"top-center\",\n};\n\nexport const INSERTION = {\n  TOP: \"top\",\n  BOTTOM: \"bottom\"\n};\n\nexport const NOTIFICATION_TYPE = {\n  SUCCESS: \"success\",\n  DANGER: \"danger\",\n  INFO: \"info\",\n  DEFAULT: \"default\",\n  WARNING: \"warning\"\n};\n\nexport const NOTIFICATION_STAGE = {\n  // used for both sliding and animation at the same time\n  SLIDING_ANIMATION_EXIT: \"SLIDING_ANIMATION_EXIT\",\n\n  // used for onTouchMove/onTouchEnd to slide and animate\n  TOUCH_SLIDING_ANIMATION_EXIT: \"TOUCH_SLIDING_ANIMATION_EXIT\",\n\n  // used by API call to remove notification\n  MANUAL_REMOVAL: \"REMOVAL\"\n};\n\nexport const REMOVAL = {\n  TIMEOUT: 1,\n  CLICK: 2,\n  TOUCH: 3,\n  MANUAL: 4\n};\n\nexport const ERROR = {\n  // dismiss icon option\n  DISMISS_ICON_CLASS: \"className property of dismissIcon option is required\",\n  DISMISS_ICON_CONTENT: \"content property of dismissIcon option is required\",\n  DISMISS_ICON_STRING: \"className property of dismissIcon option must be a String\",\n  DISMISS_ICON_INVALID: \"content property of dismissIcon option must be a valid React element\",\n\n  // animations\n  ANIMATION_IN: \"animationIn option must be an array\",\n  ANIMATION_OUT: \"animationOut option must be an array\",\n\n  // dismiss\n  DISMISS_REQUIRED: \"duration property of dismiss option is required\",\n  DISMISS_NUMBER: \"duration property of dismiss option must be a Number\",\n  DISMISS_POSITIVE: \"duration property of dismiss option must be a positive Number\",\n\n  // title\n  TITLE_STRING: \"title option must be a String.\",\n\n  // message\n  MESSAGE_REQUIRED: \"message option is required\",\n  MESSAGE_STRING: \"message option must be a String\",\n\n  // type\n  TYPE_REQUIRED: \"type option is required\",\n  TYPE_STRING: \"type option must be a String\",\n  TYPE_NOT_EXISTENT: \"type option not found\",\n\n  // container\n  CONTAINER_REQUIRED: \"container option is required\",\n  CONTAINER_STRING: \"container option must be a String\",\n\n  // dismissable\n  DISMISSABLE_CLICK_BOOL: \"click property of dismissable option must be a Boolean\",\n  DISMISSABLE_TOUCH_BOOL: \"touch property of dismissable option must be a Boolean\",\n\n  // width\n  WIDTH_NUMBER: \"width option must be a Number\",\n\n  // insert\n  INSERT_STRING: \"insert option must be a String\",\n\n  // transition\n  TRANSITION_DURATION_NUMBER: \"duration property of transition option must be a Number\",\n  TRANSITION_CUBICBEZIER_NUMBER: \"cubicBezier property of transition option must be a String\",\n  TRANSITION_DELAY_NUMBER: \"delay property of transition option must be a Number\",\n\n  // custom types\n  TYPE_NOT_FOUND: \"custom type not found\"\n};\n\nexport const BREAKPOINT = 768;\n","export function cssWidth(width) {\n  return width ? `${width}px` : undefined;\n}\n\nexport function isNullOrUndefined(prop) {\n  return prop === null || prop === undefined;\n}\n\nexport function isString(object) {\n  return typeof object === \"string\";\n}\n\nexport function isNumber(object) {\n  return typeof object === \"number\";\n}\n\nexport function isBoolean(object) {\n  return typeof object === \"boolean\";\n}\n\nexport function isArray(object) {\n  return !isNullOrUndefined(object) && object.constructor === Array;\n}\n","import React from \"react\";\nimport {\n  ERROR,\n  NOTIFICATION_TYPE\n} from \"src/constants\";\nimport {\n  isNullOrUndefined,\n  isString,\n  isNumber,\n  isBoolean,\n  isArray\n} from \"src/utils\";\n\nexport function validateDismissIconOption(dismissIcon) {\n  // skip validation for undefined option\n  if (isNullOrUndefined(dismissIcon)) return;\n\n  const {\n    className: iconClassName,\n    content: iconContent\n  } = dismissIcon;\n\n  if (!iconClassName) {\n    // className is required\n    throw new Error(ERROR.DISMISS_ICON_CLASS);\n  }\n\n  if (!isString(iconClassName)) {\n    // icon's `className` must be a String\n    throw new Error(ERROR.DISMISS_ICON_STRING);\n  }\n\n  if (!iconContent) {\n    // icon's content is required\n    throw new Error(ERROR.DISMISS_ICON_CONTENT);\n  }\n\n  if (!React.isValidElement(iconContent)) {\n    // icon's content must be a valid react element\n    throw new Error(ERROR.DISMISS_ICON_INVALID);\n  }\n}\n\nexport function validateAnimationIn(animationIn) {\n  // return empty array instead of undefined\n  if (isNullOrUndefined(animationIn)) return [];\n\n  if (!isArray(animationIn)) {\n    // option must be an Array\n    throw new Error(ERROR.ANIMATION_IN);\n  }\n\n  return animationIn;\n}\n\nexport function validateAnimationOut(animationOut) {\n  // return empty array instead of undefined\n  if (isNullOrUndefined(animationOut)) return [];\n\n  if (!isArray(animationOut)) {\n    // option must be an Array\n    throw new Error(ERROR.ANIMATION_OUT);\n  }\n\n  return animationOut;\n}\n\nexport function validateTimeoutDismissOption(dismiss) {\n  // skip validation for undefined option\n  if (!dismiss) return;\n\n  if (isNullOrUndefined(dismiss.duration)) {\n    // duration is required\n    throw new Error(ERROR.DISMISS_REQUIRED);\n  }\n\n  if (!isNumber(dismiss.duration)) {\n    // duration must be a Number\n    throw new Error(ERROR.DISMISS_NUMBER);\n  }\n\n  if (dismiss.duration < 0) {\n    // duration must be positive\n    throw new Error(ERROR.DISMISS_POSITIVE);\n  }\n}\n\nexport function validateTransition(transition, defaults) {\n  const {\n    duration,\n    cubicBezier,\n    delay\n  } = defaults;\n\n  const transitionOptions = transition || {};\n\n  if (isNullOrUndefined(transitionOptions.duration)) {\n    // set default duration\n    transitionOptions.duration = duration;\n  }\n\n  if (isNullOrUndefined(transitionOptions.cubicBezier)) {\n    // set default timing function\n    transitionOptions.cubicBezier = cubicBezier;\n  }\n\n  if (isNullOrUndefined(transitionOptions.delay)) {\n    // set default delay\n    transitionOptions.delay = delay;\n  }\n\n  if (!isNumber(transitionOptions.duration)) {\n    // throw if duration is NaN\n    throw new Error(ERROR.TRANSITION_DURATION_NUMBER);\n  }\n\n  if (!isString(transitionOptions.cubicBezier)) {\n    // throw if cubicBezier is not a String\n    throw new Error(ERROR.TRANSITION_CUBICBEZIER_NUMBER);\n  }\n\n  if (!isNumber(transitionOptions.delay)) {\n    // throw if delay is NaN\n    throw new Error(ERROR.TRANSITION_DELAY_NUMBER);\n  }\n\n  return transitionOptions;\n}\n\nexport function validateTitle(notification) {\n  const {\n    content,\n    title\n  } = notification;\n\n  // title is not required\n  if (content || isNullOrUndefined(title)) return;\n\n  if (!isString(title)) {\n    // title must be a String if defined\n    throw new Error(ERROR.TITLE_STRING);\n  }\n}\n\nexport function validateMessage(notification) {\n  const { content, message } = notification;\n\n  // message not required\n  if (content) return;\n\n  if (!message) {\n    // message is required\n    throw new Error(ERROR.MESSAGE_REQUIRED);\n  }\n\n  if (!isString(message)) {\n    // message must be a String\n    throw new Error(ERROR.MESSAGE_STRING);\n  }\n}\n\nexport function validateType(notification, userDefinedTypes) {\n  const { content, type } = notification;\n\n  // skip type validation\n  if (content) return undefined;\n\n  if (!type) {\n    // type is required\n    throw new Error(ERROR.TYPE_REQUIRED);\n  }\n\n  if (!isString(type)) {\n    // type must be a String\n    throw new Error(ERROR.TYPE_STRING);\n  }\n\n  if (\n    !userDefinedTypes\n    && type !== NOTIFICATION_TYPE.SUCCESS\n    && type !== NOTIFICATION_TYPE.DANGER\n    && type !== NOTIFICATION_TYPE.INFO\n    && type !== NOTIFICATION_TYPE.DEFAULT\n    && type !== NOTIFICATION_TYPE.WARNING\n  ) {\n    // throw error if missing type\n    throw new Error(ERROR.TYPE_NOT_EXISTENT);\n  }\n\n  return type.toLowerCase();\n}\n\nexport function validateContainer(container) {\n  if (!container) {\n    // container is required\n    throw new Error(ERROR.CONTAINER_REQUIRED);\n  }\n\n  if (!isString(container)) {\n    // container must be a String\n    throw new Error(ERROR.CONTAINER_STRING);\n  }\n\n  return container.toLowerCase();\n}\n\nexport function validateDismissable(dismissable) {\n  const option = dismissable;\n\n  if (!option) {\n    // return default values if option is undefined\n    return { click: true, touch: true };\n  }\n\n  if (isNullOrUndefined(option.click)) {\n    // set default value\n    option.click = true;\n  }\n\n  if (isNullOrUndefined(option.touch)) {\n    // set default value\n    option.touch = true;\n  }\n\n  if (!isBoolean(option.click)) {\n    // option must be Boolean\n    throw new Error(ERROR.DISMISSABLE_CLICK_BOOL);\n  }\n\n  if (!isBoolean(option.touch)) {\n    // option must be Boolean\n    throw new Error(ERROR.DISMISSABLE_TOUCH_BOOL);\n  }\n\n  return option;\n}\n\nexport function validateInsert(insert) {\n  // set default insertion\n  if (!insert) return \"top\";\n\n  if (!isString(insert)) {\n    // must be a String value\n    throw new Error(ERROR.INSERT_STRING);\n  }\n\n  return insert.toLowerCase();\n}\n\nexport function validateWidth(width) {\n  // width is not required\n  if (isNullOrUndefined(width)) return 0;\n\n  if (!isNumber(width)) {\n    // width must be a valid Number\n    throw new Error(ERROR.WIDTH_NUMBER);\n  }\n\n  return width;\n}\n\nexport function validateUserDefinedTypes(notification, definedTypes) {\n  const { type } = notification;\n\n  // skip validation in this case\n  if (notification.content) return undefined;\n\n  if (\n    type === NOTIFICATION_TYPE.SUCCESS\n    || type === NOTIFICATION_TYPE.DANGER\n    || type === NOTIFICATION_TYPE.INFO\n    || type === NOTIFICATION_TYPE.DEFAULT\n    || type === NOTIFICATION_TYPE.WARNING\n    || !definedTypes\n  ) {\n    return undefined;\n  }\n\n  // search for custom type in array\n  if (!definedTypes.find(p => p.name === type)) {\n    // custom type not found, throw exception\n    throw new Error(ERROR.TYPE_NOT_FOUND);\n  }\n\n  return definedTypes;\n}\n","import React from \"react\";\nimport {\n  ERROR,\n  NOTIFICATION_BASE_CLASS,\n  CONTAINER,\n  INSERTION,\n  NOTIFICATION_TYPE,\n  NOTIFICATION_STAGE\n} from \"src/constants\";\n\nimport {\n  validateDismissIconOption,\n  validateAnimationIn,\n  validateAnimationOut,\n  validateTimeoutDismissOption,\n  validateTransition,\n  validateTitle,\n  validateMessage,\n  validateType,\n  validateContainer,\n  validateDismissable,\n  validateInsert,\n  validateWidth,\n  validateUserDefinedTypes\n} from \"src/validators\";\n\nimport {\n  cssWidth,\n  isNullOrUndefined\n} from \"src/utils\";\n\nexport function isBottomContainer(container) {\n  return (\n    container === CONTAINER.BOTTOM_LEFT\n    || container === CONTAINER.BOTTOM_RIGHT\n    || container === CONTAINER.BOTTOM_CENTER\n  );\n}\n\nexport function isTopContainer(container) {\n  return (\n    container === CONTAINER.TOP_LEFT\n    || container === CONTAINER.TOP_RIGHT\n    || container === CONTAINER.TOP_CENTER\n  );\n}\n\nexport function shouldNotificationHaveSliding(notification) {\n  return (\n    // slide DOWN if container is top and insertion is at top\n    (notification.insert === INSERTION.TOP && isTopContainer(notification.container))\n    // slide UP if container is bottom and insertion is at bottom\n    || (notification.insert === INSERTION.BOTTOM && isBottomContainer(notification.container))\n  );\n}\n\nexport function htmlClassesForExistingType(type) {\n  const lowerCaseType = type.toLowerCase();\n\n  switch (lowerCaseType) {\n    case NOTIFICATION_TYPE.DEFAULT:\n      return [NOTIFICATION_BASE_CLASS, \"notification-default\"];\n    case NOTIFICATION_TYPE.SUCCESS:\n      return [NOTIFICATION_BASE_CLASS, \"notification-success\"];\n    case NOTIFICATION_TYPE.DANGER:\n      return [NOTIFICATION_BASE_CLASS, \"notification-danger\"];\n    case NOTIFICATION_TYPE.WARNING:\n      return [NOTIFICATION_BASE_CLASS, \"notification-warning\"];\n    case NOTIFICATION_TYPE.INFO:\n      return [NOTIFICATION_BASE_CLASS, \"notification-info\"];\n    default:\n      return [NOTIFICATION_BASE_CLASS];\n  }\n}\n\nexport function getHtmlClassesForType(notification) {\n  const {\n    // option set by user\n    type,\n    // array value containing all custom types\n    userDefinedTypes\n  } = notification;\n\n  if (notification.content) {\n    // return only base class if type is not defined\n    return [NOTIFICATION_BASE_CLASS];\n  }\n\n  if (!userDefinedTypes) {\n    // existing type\n    return htmlClassesForExistingType(type);\n  }\n\n  // look for custom type if any defined\n  const foundType = userDefinedTypes.find(q => q.name === type);\n\n  if (!foundType) {\n    // custom type not found, throw error\n    throw new Error(ERROR.TYPE_NOT_FOUND);\n  }\n\n  // append base class to html classes\n  return [NOTIFICATION_BASE_CLASS].concat(foundType.htmlClasses);\n}\n\nexport function getNotificationsForMobileView(notifications) {\n  const bottom = [];\n  const top = [];\n\n  notifications.forEach((notification) => {\n    const container = notification.container.toLowerCase();\n    if (isTopContainer(container)) {\n      top.push(notification);\n    } else if (isBottomContainer(container)) {\n      bottom.push(notification);\n    } else throw new Error(`Container ${notification.container} is not valid`);\n  });\n\n  return { top, bottom };\n}\n\nexport function getNotificationsForEachContainer(notifications) {\n  const topLeft = [];\n  const topRight = [];\n  const topCenter = [];\n  const bottomLeft = [];\n  const bottomRight = [];\n  const bottomCenter = [];\n\n  notifications.forEach((notification) => {\n    const container = notification.container.toLowerCase();\n    if (container === CONTAINER.TOP_LEFT) {\n      topLeft.push(notification);\n    } else if (container === CONTAINER.TOP_RIGHT) {\n      topRight.push(notification);\n    } else if (container === CONTAINER.TOP_CENTER) {\n      topCenter.push(notification);\n    } else if (container === CONTAINER.BOTTOM_LEFT) {\n      bottomLeft.push(notification);\n    } else if (container === CONTAINER.BOTTOM_RIGHT) {\n      bottomRight.push(notification);\n    } else if (container === CONTAINER.BOTTOM_CENTER) {\n      bottomCenter.push(notification);\n    } else {\n      throw new Error(`Container ${notification.container} is not valid`);\n    }\n  });\n\n  return {\n    topLeft,\n    topRight,\n    topCenter,\n    bottomLeft,\n    bottomRight,\n    bottomCenter\n  };\n}\n\nexport function getCubicBezierTransition(\n  duration = 500,\n  cubicBezier = \"linear\",\n  delay = 0,\n  property = \"height\"\n) {\n  return `${duration}ms ${property} ${cubicBezier} ${delay}ms`;\n}\n\nexport function slidingExitTransition(notification) {\n  return getCubicBezierTransition(\n    notification.slidingExit.duration,\n    notification.slidingExit.cubicBezier,\n    notification.slidingExit.delay,\n    \"all\"\n  );\n}\n\nexport function touchSwipeTransition(notification) {\n  const { swipe } = notification.touchSlidingExit;\n\n  return getCubicBezierTransition(\n    swipe.duration,\n    swipe.cubicBezier,\n    swipe.delay,\n    \"left\"\n  );\n}\n\nexport function touchFadeTransition(notification) {\n  const { fade } = notification.touchSlidingExit;\n\n  return getCubicBezierTransition(\n    fade.duration,\n    fade.cubicBezier,\n    fade.delay,\n    \"opacity\"\n  );\n}\n\nexport function getInitialSlidingState({ notification, isFirstNotification }) {\n  // no sliding needed for first notification in container\n  const hasSliding = shouldNotificationHaveSliding(notification) && !isFirstNotification;\n  const state = {};\n\n  // set default classes for animated element\n  state.animatedElementClasses = getHtmlClassesForType(notification);\n  state.rootElementStyle = {\n    height: \"0\",\n    marginBottom: 0,\n    overflow: \"hidden\",\n    width: cssWidth(notification.width)\n  };\n\n  if (hasSliding) {\n    // hide content by toggling visibility while sliding\n    state.animatedElementClasses.push(\"notification-invisible\");\n  } else if (notification.animationIn && notification.animationIn.length > 0) {\n    // add user defined notification classes if sliding will not occur\n    notification.animationIn.forEach(item => state.animatedElementClasses.push(item));\n  }\n\n  state.hasSliding = hasSliding;\n  return state;\n}\n\nexport function getChildStyleForTouchTransitionExit(notification, startX, currentX) {\n  const width = window.innerWidth * 2;\n  const touchSwipe = touchSwipeTransition(notification);\n  const touchFade = touchFadeTransition(notification);\n\n  return {\n    opacity: 0,\n    position: \"relative\",\n    transition: `${touchSwipe}, ${touchFade}`,\n\n    // for currentX > startX\n    // we slide to the right limit\n    // otherwise we slide to the left limit\n    left: `${currentX - startX >= 0 ? width : -width}px`\n  };\n}\n\nexport function handleTouchSlidingAnimationExit(notification, currentX, startX) {\n  // set current html classes\n  const animatedElementClasses = getHtmlClassesForType(notification);\n  // set opacity and left to pull-out notification\n  const childElementStyle = getChildStyleForTouchTransitionExit(notification, startX, currentX);\n  // sliding out transition\n  const slidingTransition = slidingExitTransition(notification);\n\n  return {\n    childElementStyle,\n    animatedElementClasses,\n    // slide to height 0\n    rootElementStyle: {\n      height: 0,\n      marginBottom: 0,\n      transition: slidingTransition,\n      width: cssWidth(notification.width)\n    },\n  };\n}\n\nexport function handleSlidingAnimationExit(notification) {\n  const { animationOut } = notification;\n  const animatedElementClasses = getHtmlClassesForType(notification);\n\n  if (animationOut) {\n    // add CSS classes if any defined\n    animationOut.forEach(item => animatedElementClasses.push(item));\n  }\n\n  return {\n    // slide element to height 0\n    rootElementStyle: {\n      height: 0,\n      marginBottom: 0,\n      transition: slidingExitTransition(notification),\n      width: cssWidth(notification.width)\n    },\n    animatedElementClasses\n  };\n}\n\nexport function handleStageTransition(notification, state) {\n  let animatedElementClasses;\n  let rootElementStyle;\n\n  const {\n    TOUCH_SLIDING_ANIMATION_EXIT,\n    SLIDING_ANIMATION_EXIT\n  } = NOTIFICATION_STAGE;\n\n  const {\n    animatedElementClasses: stateAnimatedElementClasses,\n    rootElementStyle: stateRootStyle,\n    currentX,\n    startX\n  } = state;\n\n  if (notification.stage === TOUCH_SLIDING_ANIMATION_EXIT) {\n    return handleTouchSlidingAnimationExit(notification, currentX, startX);\n  }\n\n  if (notification.stage === SLIDING_ANIMATION_EXIT) {\n    return handleSlidingAnimationExit(notification);\n  }\n\n  if (notification.resized) {\n    // window got resized, do not apply animations\n    rootElementStyle = stateRootStyle;\n    animatedElementClasses = getHtmlClassesForType(notification);\n  } else {\n    // use values from state\n    rootElementStyle = stateRootStyle;\n    animatedElementClasses = stateAnimatedElementClasses;\n  }\n\n  return {\n    rootElementStyle,\n    animatedElementClasses\n  };\n}\n\nexport function hasFullySwiped(diffX) {\n  const swipeLength = Math.abs(diffX);\n  const requiredSwipeLength = (40 / 100) * window.innerWidth;\n\n  return swipeLength >= requiredSwipeLength;\n}\n\nexport function getRootHeightStyle(notification, scrollHeight) {\n  return {\n    height: `${scrollHeight}px`,\n    width: cssWidth(notification.width),\n    transition: getCubicBezierTransition(\n      notification.slidingExit.duration,\n      notification.slidingExit.cubicBezier,\n      notification.slidingExit.delay\n    )\n  };\n}\n\nexport function getIconHtmlContent(notification, onClickHandler) {\n  // use icon defined by user\n  if (notification.dismissIcon) {\n    return (\n      <div\n        className={notification.dismissIcon.className}\n        onClick={onClickHandler}\n      >\n        {notification.dismissIcon.content}\n      </div>\n    );\n  }\n\n  // use standard icon\n  return (\n    <div\n      className=\"notification-close\"\n      onClick={onClickHandler}\n    >\n      <span>&times;</span>\n    </div>\n  );\n}\n\nexport function getRandomId() {\n  return Math.random().toString(36).substr(2, 9);\n}\n\nexport function getNotificationOptions(options, userDefinedTypes) {\n  const notification = options;\n  const {\n    insert,\n    container,\n    dismissIcon,\n    animationIn,\n    animationOut,\n    slidingEnter,\n    slidingExit,\n    touchSlidingBack,\n    touchSlidingExit,\n    dismissable,\n    dismiss,\n    width,\n    id\n  } = notification;\n\n  // Use notification id if passed or generate random ID\n  notification.id = id || getRandomId();\n\n  // validate notification's title\n  validateTitle(notification);\n\n  // validate notification's body message\n  validateMessage(notification);\n\n  // validate notification's type\n  notification.type = validateType(notification, userDefinedTypes);\n\n  if (userDefinedTypes && !notification.content) {\n    // validate user defined types if any\n    notification.userDefinedTypes = validateUserDefinedTypes(notification, userDefinedTypes);\n  }\n\n  // validate notification's container\n  notification.container = validateContainer(container);\n\n  // set default insertion\n  notification.insert = validateInsert(insert);\n\n  // set default dismissable options\n  notification.dismissable = validateDismissable(dismissable);\n\n  // assert `dismissIcon` matches rules\n  validateDismissIconOption(dismissIcon);\n\n  // validate `animationIn` array\n  notification.animationIn = validateAnimationIn(animationIn);\n\n  // validate `animationOut` array\n  notification.animationOut = validateAnimationOut(animationOut);\n\n  if (!isNullOrUndefined(width)) {\n    // set width option only if defined\n    notification.width = validateWidth(width);\n  }\n\n  // defaults\n  const slidingEnterDefaults = { duration: 600, cubicBezier: \"linear\", delay: 0 };\n  const slidingExitDefaults = { duration: 600, cubicBezier: \"linear\", delay: 0 };\n  const swipeBackDefaults = { duration: 600, cubicBezier: \"ease-in\", delay: 0 };\n  const swipeExitDefaults = { duration: 600, cubicBezier: \"ease-in\", delay: 0 };\n  const swipeCompleteDefaults = { duration: 300, cubicBezier: \"ease-in\", delay: 0 };\n\n  // set defaults for sliding enter transition\n  notification.slidingEnter = validateTransition(slidingEnter, slidingEnterDefaults);\n\n  // set defaults for sliding exit transition\n  notification.slidingExit = validateTransition(slidingExit, slidingExitDefaults);\n\n  // set defaults for sliding back on touchEnd/touchCancel\n  notification.touchSlidingBack = validateTransition(touchSlidingBack, swipeBackDefaults);\n\n  // let it empty object if undefined\n  notification.touchSlidingExit = touchSlidingExit || {};\n\n  // set defaults for swipe transition when swipe is complete\n  notification.touchSlidingExit.swipe = validateTransition(\n    notification.touchSlidingExit.swipe || {},\n    swipeExitDefaults\n  );\n\n  // set defaults for fade transition when swipe is complete\n  notification.touchSlidingExit.fade = validateTransition(\n    notification.touchSlidingExit.fade || {},\n    swipeCompleteDefaults\n  );\n\n  // assert `dismiss` matches rules\n  validateTimeoutDismissOption(dismiss);\n\n  return notification;\n}\n","import React from \"react\";\nimport { NOTIFICATION_STAGE } from \"src/constants\";\nimport { cssWidth } from \"src/utils\";\nimport {\n  getHtmlClassesForType,\n  handleStageTransition,\n  getCubicBezierTransition,\n  hasFullySwiped,\n  getRootHeightStyle,\n  getInitialSlidingState,\n  getIconHtmlContent\n} from \"src/helpers\";\n\nexport default class ReactNotification extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.endOfSmartSliding = false;\n\n    // methods binding\n    this.onTransitionEnd = this.onTransitionEnd.bind(this);\n    this.onNotificationClick = this.onNotificationClick.bind(this);\n    this.setDismissTimeout = this.setDismissTimeout.bind(this);\n\n    // smart sliding end\n    this.onSmartSlidingEnd = this.onSmartSlidingEnd.bind(this);\n    this.onTouchSmartSlidingEnd = this.onTouchSmartSlidingEnd.bind(this);\n\n    // touch events\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchMove = this.onTouchMove.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n\n    // ref elements\n    this.rootDOM = React.createRef();\n\n    // component's state\n    this.state = getInitialSlidingState(props);\n  }\n\n  componentDidMount() {\n    // start sliding\n    this.smartSliding();\n\n    // set notification to be dismissed by timeout\n    this.setRemovalTimeout(this.props.notification.dismiss);\n  }\n\n  componentWillUnmount() {\n    if (this.timeoutId) {\n      this.timeoutId = clearTimeout(this.timeoutId);\n    }\n  }\n\n  setDismissTimeout(duration) {\n    // timeout handler\n    const timeoutDismissHandler = () => {\n      const { notification, toggleTimeoutRemoval } = this.props;\n\n      // skip timeout removal if it's already in a removal process\n      if (notification.stage === NOTIFICATION_STAGE.MANUAL_REMOVAL\n        || notification.stage === NOTIFICATION_STAGE.TOUCH_SLIDING_ANIMATION_EXIT) return;\n\n      this.setState({\n        rootElementStyle: getRootHeightStyle(\n          notification,\n          this.rootDOM.current.scrollHeight\n        )\n      }, () => requestAnimationFrame(() => toggleTimeoutRemoval(notification)));\n    };\n\n    // set timeout to automatically dismiss notification\n    this.timeoutId = setTimeout(timeoutDismissHandler, duration);\n  }\n\n  setRemovalTimeout(dismiss) {\n    if (dismiss && dismiss.duration > 0) {\n      // make sure option is defined and set\n      this.setDismissTimeout(dismiss.duration);\n    }\n  }\n\n  onTransitionEnd() {\n    // sliding has finished, we need to add CSS classes to animate\n\n    const { notification } = this.props;\n    const { animationIn } = notification;\n\n    // get html classes for type\n    let animatedElementClasses = getHtmlClassesForType(notification);\n\n    // make element visible now\n    animatedElementClasses.push(\"notification-visible\");\n\n    // append animation classes\n    animatedElementClasses = animatedElementClasses.concat(animationIn || []);\n\n    this.setState({\n      animatedElementClasses,\n      rootElementStyle: {\n        height: \"auto\",\n        width: cssWidth(notification.width)\n      }\n    });\n  }\n\n  onTouchSmartSlidingEnd(e) {\n    // stop propagation of transitionEnd\n    e.stopPropagation();\n\n    if (!e.target.isSameNode(this.rootDOM.current)) {\n      // skip if target is rootDOM node\n      return;\n    }\n\n    if (this.endOfSmartSliding) {\n      // remove notification\n      this.props.toggleRemoval(this.props.notification);\n    }\n\n    // both animation and sliding have finished\n    this.endOfSmartSliding = true;\n  }\n\n  onSmartSlidingEnd() {\n    const { notification } = this.props;\n\n    if (\n      !notification.animationOut\n      || !notification.animationOut.length\n      || this.endOfSmartSliding\n    ) {\n      this.props.toggleRemoval(notification);\n    }\n\n    // both animationEnd and transitionEnd have finished\n    this.endOfSmartSliding = true;\n  }\n\n  smartSliding() {\n    const { notification } = this.props;\n    const { slidingEnter } = notification;\n\n    const animatedElementClasses = getHtmlClassesForType(notification);\n    const rootElementStyle = {\n      // set sliding transition unless `resize` event has been fired\n      // in which case we no longer slide nor animate\n      transition: notification.resized\n        ? undefined\n        : getCubicBezierTransition(\n          slidingEnter.duration,\n          slidingEnter.cubicBezier,\n          slidingEnter.delay\n        ),\n\n      // overwrite notification's width\n      width: cssWidth(notification.width),\n\n      // set height instead of auto\n      height: `${this.rootDOM.current.scrollHeight}px`\n    };\n\n    // if `resize` has been fired then no animation is going to happen\n    if (!notification.resized\n      && notification.animationIn\n      && notification.animationIn.length > 0) {\n      notification.animationIn.forEach(item => animatedElementClasses.push(item));\n    }\n\n    this.setState({\n      rootElementStyle,\n      animatedElementClasses\n    });\n  }\n\n  onNotificationClick() {\n    const { notification } = this.props;\n\n    const rootElementStyle = getRootHeightStyle(\n      notification,\n      this.rootDOM.current.scrollHeight\n    );\n\n    this.setState({\n      rootElementStyle\n    }, () => requestAnimationFrame(() => {\n      this.props.onClickHandler(notification);\n    }));\n  }\n\n  onTouchStart(e) {\n    this.setState({\n      startX: e.touches[0].pageX,\n      currentX: e.touches[0].pageX\n    });\n  }\n\n  onTouchMove(e) {\n    const {\n      notification,\n      toggleTouchEnd\n    } = this.props;\n\n    // distance between start and current\n    const distance = e.touches[0].pageX - this.state.startX;\n\n    if (hasFullySwiped(distance)) {\n      // move notification to the left/right by changing style\n      this.setState({\n        animatedElementClasses: getHtmlClassesForType(notification),\n        rootElementStyle: getRootHeightStyle(\n          notification,\n          this.rootDOM.current.scrollHeight\n        )\n      }, () => {\n        // remove notification from state\n        requestAnimationFrame(() => toggleTouchEnd(notification));\n      });\n      return;\n    }\n\n    // swiping is still in place\n    this.setState({\n      currentX: e.touches[0].pageX,\n      childElementStyle: {\n        position: \"relative\",\n        left: `${0 + distance}px`\n      }\n    });\n  }\n\n  onTouchEnd() {\n    const { touchSlidingBack } = this.props.notification;\n\n    this.setState({\n      childElementStyle: {\n        left: \"0\",\n        position: \"relative\",\n        transition: getCubicBezierTransition(\n          touchSlidingBack.duration,\n          touchSlidingBack.cubicBezier,\n          touchSlidingBack.delay,\n          \"left\"\n        )\n      }\n    });\n  }\n\n  render() {\n    const { notification } = this.props;\n    let { childElementStyle } = this.state;\n    let { onAnimationEnd } = this;\n    let onNotificationClick = null;\n    let touchHasEnded = false;\n\n    // set onTransitionEnd event if notification has sliding\n    let onTransitionEnd = this.state.hasSliding\n      ? this.onTransitionEnd\n      : null;\n\n    const stage = handleStageTransition(notification, this.state);\n    const animatedElementClasses = (stage.animatedElementClasses || []).join(\" \");\n    let { rootElementStyle } = stage;\n\n    // set `onClick` event if notification is dismissable\n    if (notification.dismissable.click) {\n      ({ onNotificationClick } = this);\n    }\n\n    if (notification.stage === NOTIFICATION_STAGE.MANUAL_REMOVAL) {\n      onAnimationEnd = null;\n      rootElementStyle = getRootHeightStyle(notification, this.rootDOM.current.scrollHeight);\n    } else if (notification.stage === NOTIFICATION_STAGE.SLIDING_ANIMATION_EXIT) {\n      onAnimationEnd = this.onSmartSlidingEnd;\n      onTransitionEnd = this.onSmartSlidingEnd;\n    } else if (notification.stage === NOTIFICATION_STAGE.TOUCH_SLIDING_ANIMATION_EXIT) {\n      onAnimationEnd = this.onTouchSmartSlidingEnd;\n      onTransitionEnd = this.onTouchSmartSlidingEnd;\n      onNotificationClick = null;\n      ({ childElementStyle } = stage);\n      touchHasEnded = true;\n    }\n\n    if (notification.content) {\n      return (\n        <div\n          onTouchStart={touchHasEnded ? null : this.onTouchStart}\n          onTouchMove={touchHasEnded ? null : this.onTouchMove}\n          onTouchEnd={touchHasEnded ? null : this.onTouchEnd}\n          onTouchCancel={touchHasEnded ? null : this.onTouchEnd}\n          onClick={onNotificationClick}\n          className=\"notification-item-root\"\n          onAnimationEnd={onAnimationEnd}\n          onTransitionEnd={onTransitionEnd}\n          ref={this.rootDOM}\n          style={rootElementStyle}\n        >\n          <div\n            className={`${animatedElementClasses} notification-item-child`}\n            style={childElementStyle}\n          >\n            {notification.content}\n          </div>\n        </div>\n      );\n    }\n\n    const icon = <div\n      className=\"notification-close\"\n      onClick={this.onNotificationClick}>\n      <span>&times;</span>\n    </div>;\n\n    const htmlCloseIconContent = notification.dismissIcon\n      ? getIconHtmlContent(notification, this.onNotificationClick)\n      : icon;\n\n    let notificationTitle;\n    if (notification.title) {\n      notificationTitle = <h4 className=\"notification-title\">{notification.title}</h4>;\n    }\n\n    return (\n      <div\n        onTouchStart={touchHasEnded ? null : this.onTouchStart}\n        onTouchMove={touchHasEnded ? null : this.onTouchMove}\n        onTouchEnd={touchHasEnded ? null : this.onTouchEnd}\n        onTouchCancel={touchHasEnded ? null : this.onTouchEnd}\n        onClick={onNotificationClick}\n        className=\"notification-item-root\"\n        onAnimationEnd={onAnimationEnd}\n        onTransitionEnd={onTransitionEnd}\n        ref={this.rootDOM}\n        style={rootElementStyle}\n      >\n        <div\n          className={`${animatedElementClasses} notification-item-child`}\n          style={childElementStyle}\n        >\n          <div className=\"notification-content\">\n            {htmlCloseIconContent}\n            {notificationTitle}\n            <p className=\"notification-message\">\n              {this.props.notification.message}\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactNotification from \"src/react-notification\";\nimport PropTypes from \"prop-types\";\nimport { isArray } from \"src/utils\";\n\nimport {\n  INSERTION,\n  NOTIFICATION_STAGE,\n  REMOVAL,\n  BREAKPOINT\n} from \"src/constants\";\n\nimport {\n  getNotificationsForEachContainer,\n  getNotificationsForMobileView,\n  getNotificationOptions\n} from \"src/helpers\";\n\n// react-notifications-component theme\nimport \"src/scss/notification.scss\";\n\nclass ReactNotificationComponent extends React.Component {\n  static propTypes = {\n    // option for responsiveness (defaults to true)\n    isMobile: PropTypes.bool,\n    // responsiveness breakpoint (defaults to 768)\n    breakpoint: PropTypes.number,\n    types: PropTypes.array,\n    onNotificationRemoval: PropTypes.func\n  }\n\n  static defaultProps = {\n    isMobile: true,\n    breakpoint: BREAKPOINT\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isMobile: props.isMobile,\n      breakpoint: props.breakpoint,\n      // notifications array data\n      notifications: []\n    };\n\n    if (isArray(props.types)) {\n      // check for custom types\n      this.state.userDefinedTypes = props.types;\n    }\n\n    this.addNotification = this.addNotification.bind(this);\n    this.onNotificationClick = this.onNotificationClick.bind(this);\n    this.toggleRemoval = this.toggleRemoval.bind(this);\n    this.toggleTimeoutRemoval = this.toggleTimeoutRemoval.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.renderReactNotifications = this.renderReactNotifications.bind(this);\n    this.toggleTouchEnd = this.toggleTouchEnd.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      width: window.innerWidth\n    }, () => {\n      // add listener for `resize` event\n      window.addEventListener(\"resize\", this.handleResize);\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleResize() {\n    this.setState({\n      width: window.innerWidth,\n      notifications: this.state.notifications.map(notification => {\n        notification.resized = true;\n        return notification;\n      })\n    });\n  }\n\n  toggleTimeoutRemoval(notification) {\n    const { SLIDING_ANIMATION_EXIT } = NOTIFICATION_STAGE;\n    const { TIMEOUT } = REMOVAL;\n\n    this.setState({\n      notifications: this.state.notifications.map(item => {\n        if (item.id === notification.id) {\n          // set stage flag\n          item.stage = SLIDING_ANIMATION_EXIT;\n          // set removal flag\n          item.removedBy = TIMEOUT;\n        }\n\n        return item;\n      })\n    });\n  }\n\n  // API call\n  addNotification(object) {\n    // call will throw exception if object does not match rules\n    const notification = getNotificationOptions(\n      object,\n      // we need this to validate custom types if any\n      this.state.userDefinedTypes\n    );\n\n    this.setState((prevState) => ({\n      notifications:\n        notification.insert === INSERTION.TOP\n          ? [notification, ...prevState.notifications]\n          : [...prevState.notifications, notification]\n    }));\n\n    return notification.id;\n  }\n\n  // API call\n  removeNotification(id) {\n    this.setState({\n      notifications: this.state.notifications.map(item => {\n        if (item.id === id) {\n          // set stage flag\n          item.stage = NOTIFICATION_STAGE.MANUAL_REMOVAL;\n          // set removal flag\n          item.removedBy = REMOVAL.API;\n        }\n\n        return item;\n      })\n    }, () => {\n      requestAnimationFrame(() => {\n        this.setState({\n          notifications: this.state.notifications.map(item => {\n            if (item.id === id) {\n              // set stage flag\n              item.stage = NOTIFICATION_STAGE.SLIDING_ANIMATION_EXIT;\n              // set removal flag\n              item.removedBy = REMOVAL.API;\n            }\n\n            return item;\n          })\n        });\n      });\n    });\n  }\n\n  onNotificationClick(notification) {\n    const { dismissable, dismissIcon } = notification;\n    const dismissByClick = dismissable && dismissable.click;\n\n    if (dismissByClick || dismissIcon) {\n      requestAnimationFrame(() => {\n        this.setState({\n          notifications: this.state.notifications.map(item => {\n            if (item.id === notification.id) {\n              // set stage flag\n              item.stage = NOTIFICATION_STAGE.SLIDING_ANIMATION_EXIT;\n              // set removal flag\n              item.removedBy = REMOVAL.CLICK;\n            }\n\n            return item;\n          })\n        });\n      });\n    }\n  }\n\n  // called after a full swipe in order to remove notification from state\n  toggleTouchEnd(notification) {\n    const { TOUCH_SLIDING_ANIMATION_EXIT } = NOTIFICATION_STAGE;\n\n    this.setState({\n      notifications: this.state.notifications.map(item => {\n        if (item.id === notification.id) {\n          // set stage flag\n          item.stage = TOUCH_SLIDING_ANIMATION_EXIT;\n          // set removal flag\n          item.removedBy = REMOVAL.TOUCH;\n        }\n\n        return item;\n      })\n    });\n  }\n\n  toggleRemoval(notification) {\n    this.setState({\n      notifications: this.state.notifications.filter(item => item.id !== notification.id)\n    }, () => {\n      if (this.props.onNotificationRemoval) {\n        this.props.onNotificationRemoval(notification.id, notification.removedBy);\n      }\n    });\n  }\n\n  renderReactNotifications(notifications) {\n    return notifications.map(notification => <ReactNotification\n      key={notification.id}\n      notification={notification}\n      isFirstNotification={notifications.length === 1}\n      onClickHandler={this.onNotificationClick}\n      toggleRemoval={this.toggleRemoval}\n      toggleTimeoutRemoval={this.toggleTimeoutRemoval}\n      toggleTouchEnd={this.toggleTouchEnd}\n    />);\n  }\n\n  render() {\n    const {\n      state,\n      props\n    } = this;\n\n    if (props.isMobile && state.width <= state.breakpoint) {\n      const mobileNotifications = getNotificationsForMobileView(state.notifications);\n      const top = this.renderReactNotifications(mobileNotifications.top);\n      const bottom = this.renderReactNotifications(mobileNotifications.bottom);\n\n      return (\n        <div className=\"react-notification-root\">\n          <div className=\"notification-container-mobile-top\">\n            {top}\n          </div>\n          <div className=\"notification-container-mobile-bottom\">\n            {bottom}\n          </div>\n        </div>\n      );\n    }\n\n    const notificationsPerContainer = getNotificationsForEachContainer(state.notifications);\n    const topLeft = this.renderReactNotifications(notificationsPerContainer.topLeft);\n    const topRight = this.renderReactNotifications(notificationsPerContainer.topRight);\n    const topCenter = this.renderReactNotifications(notificationsPerContainer.topCenter);\n    const bottomLeft = this.renderReactNotifications(notificationsPerContainer.bottomLeft);\n    const bottomRight = this.renderReactNotifications(notificationsPerContainer.bottomRight);\n    const bottomCenter = this.renderReactNotifications(notificationsPerContainer.bottomCenter);\n\n    return (\n      <div className=\"react-notification-root\">\n        <div className=\"notification-container-top-left\">\n          {topLeft}\n        </div>\n        <div className=\"notification-container-top-right\">\n          {topRight}\n        </div>\n        <div className=\"notification-container-bottom-left\">\n          {bottomLeft}\n        </div>\n        <div className=\"notification-container-bottom-right\">\n          {bottomRight}\n        </div>\n        <div className=\"notification-container-top-center\">\n          {topCenter}\n        </div>\n        <div className=\"notification-container-bottom-center\">\n          {bottomCenter}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReactNotificationComponent;\n"],"sourceRoot":""}